-> Python is an interpreted(quick i.e. no compilation step),
functional and object oriented high level language.
-> It has a simple syntax and it can be deployed fast as it contains several Fast-inbuilt libraries.
-> Why to use Python?
    Because it is easy to learn/use, performance is high, rapid development, dynamically types
    i.e, we do not need to specify the data type (it will decide automatically in the run time),
    community is huge and python can easily integrate with third party libraries i.e, CherryPy, 
    boto etc. (A complete list can be found at pythonanywhere.com/batteries_included).

-> Instead of {} for a block of code in other programming languages, we use indentation.
-> Indentation is nothing but leaving a specific amount of spaces or a tab space while
    grouping a blocl of code.
    For example:
        x = int(input("Enter min number"))
        y = int(input("Enter max number"))
        i = x
        if i%2 == 0: i=x+1
        while i<=y:
            print(i) #Indentation
            i += 2  #Indentation
    * General convention is to use 4 spaces. The number of spaces should be same throughout the
    project.

-> When we work in real time applications we also need to hold on to multiple values or a sequence
    of values at a time which could be coming from a database table or from a restful
    webservice call or from some other source.
    For that, we use collections: List, Set and Dictionary.
    List:
    The list can store any number of values or objects dynamically and it maintains their order.
    Set: 
    It doesn't allow duplicates. The set and list have a lot of methods to deal with the CRUD of
    the elements.
    Dictionary:
    It's a map. It's used to store keys and values and has separate methods for that.

-> Tuple Sequence Type is just like a list, but it can never be modified. We create a tuple 
    using the normal parenthesis. We can not use the methods like:
    append(), extend(), insert(), remove() and clear()

-> Set Sequence Type does not allow duplicates. And it does not guarantee any order.
-> In python, to find the exponents, we use ** operator. It means that if we write a**b, it will
    calculate a^b.
    // is also a special operator which is also known as integer division operator, also known as
    floor division. It performs the division and returns the integer quotient.

-> FOR SWAPPING TWO VARIABLE WITHOUT USING ANY VARIABLE IN PYTHON:
    a,b = 10, 5
    print(a,b)
    a,b = b,a
    print(a,b)

-> Flow Control and Statements:
1. Control Statements: if.
2. Conditional Statements: if ... else, if ... elif ... else (Else if Ladder).
3. Looping: while, for
4. Transfer: It allows us to transfer the control of our program from one place to another starting
    with
    -> break
    -> continue
    -> pass
    -> return.

IF: if(conditions: statements)
IF ELSE:
    if(conditions: statements)
    else: statements

WHILE Statement:
while condition:
    statements

A for loop is typically used to iterate over the elements of a sequence like: string, list, tuple, set,
    range, etc.
    SYNTAX:
    for var in sequence:
        statements
    This will go on until the last element is reached.


-> The command line arguments are those arguments that are passed whenever a python program is run.
SYNTAX: python myProgram.py 123 abc xy
We can pass anything i.e, file location or a connection URL can be passed as an argument.
All these values are passed in our python program through a list called argv. And, this list is
inside the sys module. So, to access the elements, we can use sys.argv.